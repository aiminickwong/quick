{% extends "master.tmpl" %}
{% load site %}
{% block content %}
<script type="text/javascript">
{% ifequal what "system" %}
function intf_enable_field(field,enabled)
{
    if (enabled) {
        //document.getElementById(field+"_row").style.display="table-row"
        document.getElementById(field+"_row").style.display="inherit"
    } else {
        document.getElementById(field+"_row").style.display="none"
    }
}

function intf_update_visibility()
{
    is_slave  = false
    is_master = false
    is_infiniband = false
    value = document.getElementById("interface_type").value
    if (value == "bond_slave" || value == "bridge_slave" || value == "bonded_bridge_slave") {
        is_slave = true;
    }    
    if (value == "bond" || value == "bridge" || value == "bonded_bridge_slave") {
        is_master = true;
    }
    if (value == "infiniband") {
        is_infiniband = true;
    }

    is_static = document.getElementById("static").checked
    is_management = document.getElementById("management").checked
 
    intf_enable_field("static",!is_slave)
    intf_enable_field("ip_address",(!is_slave))
    intf_enable_field("netmask",(!is_slave) && is_static)
    intf_enable_field("if_gateway",(!is_slave) && is_static)
    intf_enable_field("management",(!is_slave) && is_static)
    intf_enable_field("dns_name",!is_slave)
    intf_enable_field("static_routes",!is_slave)
    intf_enable_field("dhcp_tag",!is_slave)
    intf_enable_field("virt_bridge",!is_master)
    intf_enable_field("bonding_opts",is_master)
    intf_enable_field("bridge_opts",is_master)
    intf_enable_field("interface_master",is_slave)
    intf_enable_field("connected_mode",is_infiniband)
    intf_enable_field("mtu",!is_slave)
    intf_enable_field("ipv6_address",!is_slave)
    intf_enable_field("ipv6_prefix",!is_slave)
    intf_enable_field("ipv6_secondaries",!is_slave)
    intf_enable_field("ipv6_mtu",!is_slave)
    intf_enable_field("ipv6_static_routes",!is_slave)
    intf_enable_field("ipv6_default_gateway",!is_slave)
    intf_enable_field("cnames",!is_slave)
}

function get_selected_interface()
{
   return document.getElementById("interfaces").value
}

last_interface = ""

function on_interface_change()
{
    // called when the user picks something new from the interface selector
    save_intf(last_interface);
    clear_intf();
    last_interface = get_selected_interface()
    load_intf()
}

function populate_widgets() 
{
    var buf = "";
    buf = buf + "<input class='form-control' type='text' name='newinterfacename' id='newinterfacename' value=''>";
    buf = buf + "<input class='btn btn-primary btn-xs' type='button' name='addinterface' value='添加' onclick='javascript:on_interface_add()' />";
    document.getElementById("widget_network_widget_a").innerHTML = buf;

    buf = "";
    buf = buf + "<select class='form-control' name='interfaces' id='interfaces' onchange='javascript:on_interface_change()'>";
    buf = buf + "</select>";
    buf = buf + "<input class='btn btn-primary btn-xs' type='button' name='deleteinterface' value='删除' onclick='javascript:on_interface_delete()' />";
    buf = buf + "<input class='btn btn-primary btn-xs' type='button' name='renameinterface' value='重命名' onclick='javascript:on_interface_rename()' />";
    document.getElementById("widget_network_widget_b").innerHTML = buf;

    buf = "";
    buf = buf + "<input class='btn btn-primary btn-xs' type='button' name='getrandommac' value='随机生成MAC' onclick='javascript:get_random_mac()' />";
    document.getElementById("widget_network_widget_c").innerHTML = buf;
}

function on_interface_add()
{
    // called when the user hits the "new interface" button

    var iname = document.getElementById("newinterfacename").value

    if ((iname == "") || (iname == " ")) {
        alert("无效的接口名称")
        return
    }

    if (interface_table[iname] != null) {
        alert("该接口名称已存在")
        return
    }

    if (interface_table[iname] == null) {
        interface_table[iname] = new Array()
    } else {
        save_intf(interface_table[iname])
    }

    // fixme: would be nice to have this more autogenerated from the template
    interface_table[iname]["mac_address"] = ""
    interface_table[iname]["interface_type"] = ""
    interface_table[iname]["interface_master"] = ""
    interface_table[iname]["bonding_opts"] = ""
    interface_table[iname]["bridge_opts"] = ""
    interface_table[iname]["ip_address"] = ""
    interface_table[iname]["dns_name"] = ""
    interface_table[iname]["static_routes"] = ""
    interface_table[iname]["dhcp_tag"] = ""
    interface_table[iname]["virt_bridge"] = ""
    interface_table[iname]["netmask"] = ""
    interface_table[iname]["if_gateway"] = ""
    interface_table[iname]["static"] = false
    interface_table[iname]["management"] = false
    interface_table[iname]["present"] = "1"
    interface_table[iname]["original"] = "0"
    interface_table[iname]["connected_mode"] = false
    interface_table[iname]["mtu"] = ""
    interface_table[iname]["ipv6_address"] = ""
    interface_table[iname]["ipv6_prefix"] = ""
    interface_table[iname]["ipv6_secondaries"] = ""
    interface_table[iname]["ipv6_mtu"] = ""
    interface_table[iname]["ipv6_static_routes"] = ""
    interface_table[iname]["ipv6_default_gateway"] = ""
    interface_table[iname]["cnames"] = ""

    var interfaces = document.getElementById("interfaces")
    ilen = interfaces.length
    var new_option = new Option(iname,iname)
    interfaces.options[ilen] = new_option
    interfaces.selectedIndex = ilen
    on_interface_change() // explicit firing required   
}

function on_interface_delete()
{
    selected = get_selected_interface()
    interfaces = document.getElementById("interfaces")

    if (interfaces.length == 1) {
        alert("systems 必须至少有一个接口存在")
        return
    } 
   
    clear_intf()
    for (i = interfaces.options.length - 1; i>=0; i--) {
        if (interfaces.options[i].value == selected) {
            interfaces.remove(i)
        }
    }
    interface_table[selected]["present"] = 0
    interfaces.selectedIndex = 0
    load_intf()
} 

function on_interface_rename()
{
    selected = get_selected_interface();
    var newname = window.prompt("Rename Interface",selected);
    if (newname == null || newname == selected) {
        return;
    }

    interface_table[newname] = jQuery.extend(true, {}, interface_table[selected]);
    interface_table[selected]["present"] = 0

    interfaces = document.getElementById("interfaces");
    for (i = interfaces.options.length - 1; i>=0; i--) {
        if (interfaces.options[i].value == selected) {
            interfaces.options[i].text = newname;
            interfaces.options[i].value = newname;
        }
    }
}

function get_enabled_field(field,enabled)
{
    if (enabled) {
        return document.getElementById(field).value
    } else {
        return ""
    }
}

function save_intf(which) 
{
    // this populates the interface widget with the data for the currently selected interface
    // and is called when the user picks a certain interface from the drop-down

    iname = which
    var itable = interface_table[iname]
    if (itable == null) {
        interface_table[iname] = new Array()
        itable = interface_table[iname]
    }

    var type = document.getElementById("interface_type").value
    var is_slave  = false;
    var is_master = false;
    var is_infiniband = false;
    if (type == "bond" || type == "bridge" || type == "bonded_bridge_slave") {
        is_master  = true;
    }
    if (type == "bond_slave" || type == "bridge_slave" || type == "bonded_bridge_slave") {
        is_slave   = true;
    }
    if (type == "infiniband") {
        is_infiniband   = true;
    }
    is_static=document.getElementById("static").checked
    is_management=document.getElementById("management").checked

    itable["name"]             = iname
    itable["mac_address"]      = document.getElementById("mac_address").value
    itable["interface_type"]   = type
    itable["interface_master"] = get_enabled_field("interface_master",is_slave)
    itable["bonding_opts"]     = get_enabled_field("bonding_opts",is_master)
    itable["bridge_opts"]      = get_enabled_field("bridge_opts",is_master)
    itable["static"]           = is_static
    itable["management"]       = is_management
    itable["ip_address"]       = get_enabled_field("ip_address",(!is_slave))
    itable["netmask"]          = get_enabled_field("netmask",(!is_slave) && is_static)
    itable["if_gateway"]       = get_enabled_field("if_gateway",(!is_slave) && is_static)
    itable["dns_name"]         = get_enabled_field("dns_name",!is_slave)
    itable["static_routes"]    = get_enabled_field("static_routes",!is_slave)
    itable["dhcp_tag"]         = get_enabled_field("dhcp_tag",!is_slave)
    itable["virt_bridge"]      = get_enabled_field("virt_bridge",!is_master)
    itable["present"]          = document.getElementById("present").value
    itable["original"]         = document.getElementById("original").value
    itable["connected_mode"]       = get_enabled_field("connected_mode",is_infiniband)
    itable["mtu"]                  = get_enabled_field("mtu",!is_slave)
    itable["ipv6_address"]         = get_enabled_field("ipv6_address",!is_slave)
    itable["ipv6_prefix"]          = get_enabled_field("ipv6_prefix",!is_slave)
    itable["ipv6_secondaries"]     = get_enabled_field("ipv6_secondaries",!is_slave)
    itable["ipv6_mtu"]             = get_enabled_field("ipv6_mtu",!is_slave)
    itable["ipv6_static_routes"]   = get_enabled_field("ipv6_static_routes",!is_slave)
    itable["ipv6_default_gateway"] = get_enabled_field("ipv6_default_gateway",!is_slave)
    itable["cnames"]           = get_enabled_field("cnames",!is_slave)
}

function load_intf()
{
    // this populates the interface widget with the data for the currently selected interface
    // and is called when the user picks a certain interface from the drop-down
    // FIXME: can we load this up from the template data?
    intf = get_selected_interface()
    document.getElementById("mac_address").value      = interface_table[intf]["mac_address"]
    document.getElementById("interface_type").value   = interface_table[intf]["interface_type"]
    document.getElementById("interface_master").value = interface_table[intf]["interface_master"]
    document.getElementById("bonding_opts").value     = interface_table[intf]["bonding_opts"]
    document.getElementById("bridge_opts").value      = interface_table[intf]["bridge_opts"]
    document.getElementById("static").checked         = interface_table[intf]["static"]
    document.getElementById("management").checked     = interface_table[intf]["management"]
    document.getElementById("ip_address").value       = interface_table[intf]["ip_address"]
    document.getElementById("netmask").value          = interface_table[intf]["netmask"]
    document.getElementById("if_gateway").value       = interface_table[intf]["if_gateway"]
    document.getElementById("dns_name").value         = interface_table[intf]["dns_name"]
    document.getElementById("static_routes").value    = interface_table[intf]["static_routes"]
    document.getElementById("dhcp_tag").value         = interface_table[intf]["dhcp_tag"]
    document.getElementById("virt_bridge").value      = interface_table[intf]["virt_bridge"]
    document.getElementById("present").value          = interface_table[intf]["present"]
    document.getElementById("original").value         = interface_table[intf]["original"]
    document.getElementById("connected_mode").checked = interface_table[intf]["connected_mode"]
    document.getElementById("mtu").value                  = interface_table[intf]["mtu"]
    document.getElementById("ipv6_address").value         = interface_table[intf]["ipv6_address"]
    document.getElementById("ipv6_prefix").value          = interface_table[intf]["ipv6_prefix"]
    document.getElementById("ipv6_secondaries").value     = interface_table[intf]["ipv6_secondaries"]
    document.getElementById("ipv6_mtu").value             = interface_table[intf]["ipv6_mtu"]
    document.getElementById("ipv6_static_routes").value   = interface_table[intf]["ipv6_static_routes"]
    document.getElementById("ipv6_default_gateway").value = interface_table[intf]["ipv6_default_gateway"]
    document.getElementById("cnames").value           = interface_table[intf]["cnames"]

    intf_update_visibility()
}

function clear_intf()
{
    // this clears the interface list and populates it with the currently selected interface data

    document.getElementById("mac_address").value          = ""
    document.getElementById("interface_type").value       = "na"
    document.getElementById("interface_master").value     = ""
    document.getElementById("bonding_opts").value         = ""
    document.getElementById("bridge_opts").value          = ""
    document.getElementById("static").checked             = true
    document.getElementById("management").checked         = true
    document.getElementById("ip_address").value           = ""
    document.getElementById("netmask").value              = ""
    document.getElementById("if_gateway").value           = ""
    document.getElementById("dns_name").value             = ""
    document.getElementById("static_routes").value        = ""
    document.getElementById("dhcp_tag").value             = ""
    document.getElementById("virt_bridge").value          = ""
    document.getElementById("present").value              = "1"
    document.getElementById("original").value             = "0"
    document.getElementById("connected_mode").checked     = false
    document.getElementById("mtu").value                  = ""
    document.getElementById("ipv6_address").value         = ""
    document.getElementById("ipv6_prefix").value          = ""
    document.getElementById("ipv6_secondaries").value     = ""
    document.getElementById("ipv6_mtu").value             = ""
    document.getElementById("ipv6_static_routes").value   = ""
    document.getElementById("ipv6_default_gateway").value = ""
    document.getElementById("cnames").value               = ""
}

function build_interface_table()
{
    // called during onload, this stores all of the interfaces from Cheetah in javascript
    // so that we can manipulate them dynamically in more interesting ways
    interface_table = new Array()
    var last = ""
  {% smart_if interface_length > 0 %}
    var ifound = 0
    {% for key,value in interfaces.items %}
    interface_table['{{ key }}'] = new Array()
    interface_table['{{ key }}']["mac_address"]          = "{{ value.mac_address }}"
    interface_table['{{ key }}']["interface_type"]       = "{{ value.interface_type }}"
    interface_table['{{ key }}']["interface_master"]     = "{{ value.interface_master }}"
    interface_table['{{ key }}']["bonding_opts"]         = "{{ value.bonding_opts }}"
    interface_table['{{ key }}']["bridge_opts"]          = "{{ value.bridge_opts }}"
    interface_table['{{ key }}']["static"]               = {{ value.static|lower }}
    interface_table['{{ key }}']["management"]           = {{ value.management|lower }}
    interface_table['{{ key }}']["ip_address"]           = "{{ value.ip_address }}"
    interface_table['{{ key }}']["netmask"]              = "{{ value.netmask }}"
    interface_table['{{ key }}']["if_gateway"]           = "{{ value.if_gateway }}"
    interface_table['{{ key }}']["dns_name"]             = "{{ value.dns_name }}"
    interface_table['{{ key }}']["static_routes"]        = "{{ value.static_routes|join:" " }}"
    interface_table['{{ key }}']["dhcp_tag"]             = "{{ value.dhcp_tag }}"
    interface_table['{{ key }}']["virt_bridge"]          = "{{ value.virt_bridge }}"
    interface_table['{{ key }}']["present"]              = "1"
    interface_table['{{ key }}']["original"]             = "1"
    interface_table['{{ key }}']["connected_mode"]       = {{ value.connected_mode|lower }}
    interface_table['{{ key }}']["mtu"]                  = "{{ value.mtu }}"
    interface_table['{{ key }}']["ipv6_address"]         = "{{ value.ipv6_address }}"
    interface_table['{{ key }}']["ipv6_prefix"]          = "{{ value.ipv6_prefix }}"
    interface_table['{{ key }}']["ipv6_secondaries"]     = "{{ value.ipv6_secondaries|join:" " }}"
    interface_table['{{ key }}']["ipv6_mtu"]             = "{{ value.ipv6_mtu }}"
    interface_table['{{ key }}']["ipv6_static_routes"]   = "{{ value.ipv6_static_routes|join:" " }}"
    interface_table['{{ key }}']["ipv6_default_gateway"] = "{{ value.ipv6_default_gateway }}"
    interface_table['{{ key }}']["cnames"]                = "{{ value.cnames|join:" " }}"
    last = "{{ key }}"
    {% endfor %}
  {% endsmart_if %}
    return interface_table
}

function populate_interfaces() {
    interfaces = document.getElementById("interfaces")
    ilen = interfaces.length
  {% for x in interface_names %}
    var new_option = new Option("{{ x }}","{{ x }}")
    interfaces.options[ilen] = new_option
    interfaces.selectedIndex = ilen
    ilen = ilen + 1 
  {% endfor %}
    interfaces.selectedIndex = 0
    document.getElementById("static").onchange=intf_update_visibility;
    document.getElementById("interface_type").onchange=intf_update_visibility;
}

function get_random_mac()
{
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "/quick/utils/random_mac", true);
    xmlHttp.onreadystatechange = function () {
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
            var mac_field = document.getElementById("mac_address")
            var result = xmlHttp.responseText;
            if (result.charAt(2) == ':' && result.charAt(5) == ':') {
                mac_field.value = result;
            }
        }
    };
    xmlHttp.send(null);
}
{% endifequal %}
function on_form_submit()
{
{% ifequal what "system" %}
    // form submission handler
    save_intf(get_selected_interface())
    var listing = ""
    for (var iname in interface_table) {
        if (listing == "") {
            listing = iname
        } else {
            listing = iname + "," + listing
        }
        for (var ikey in interface_table[iname]) {
            var field_name = ikey + "-" + iname
            var current_value = interface_table[iname][ikey]
            var new_input=document.createElement('input')
            new_input.name=field_name
            new_input.value=current_value
            new_input.style.display='none'
            document.editform.appendChild(new_input)
        }
    }
    document.getElementById("interface_list").value = listing
    document.getElementById("name").disabled= false
{% endifequal %}
    // we have to select all items all multiselects
    // so they'll be submitted and saved correctly
{% for key,value in sections.items|sort %}
  {% for item in value.fields %}
    {% ifequal item.html_element "multiselect" %}
    var cur_multi = document.getElementById("{{ item.dname }}");
    if (cur_multi) {
        for (i=0; i <= cur_multi.options.length - 1; i++) {
            cur_multi.options[i].selected = true;
        }
    }
    {% endifequal %}
  {% endfor %}
{% endfor %}
    document.editform.submit()
}

function page_onload() {
{% ifequal what "system" %}
    populate_widgets();
    interface_table = build_interface_table();
    populate_interfaces();
    last_interface = get_selected_interface();
    load_intf();
{% endifequal %}
}
</script>

<script type="text/javascript">
$(document).ready(function()
{
  //make some stuff resizeable
  $("select.edit").resizable();
  //hide the all of the element with class msg_body
  //$(".sectionbody").hide();
  //$("#block_General").show();
  //toggle the componenet with class sectionbody
  //$(".sectionheader").click(function()
  //{
  //  $(this).next(".sectionbody").slideToggle(500);
  //});
});
</script>
<div class="content">
    <div class="page-inner">
        <div class="page-header">
            <h4 class="page-title">配置管理</h4>
            <ul class="breadcrumbs">
                <li class="nav-home">
                    <a href="/quick">
                        <i class="flaticon-home"></i>
                    </a>
                </li>
                <li class="separator">
                    <i class="flaticon-right-arrow"></i>
                </li>
                <li class="nav-item">
                    <a href="#">配置管理</a>
                </li>
                <li class="separator">
                    <i class="flaticon-right-arrow"></i>
                </li>
                <li class="nav-item">
                    <a href="/quick/{{what}}/list">{{ what|title }}</a>
                </li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-12">
            <form name="editform" method="post" action="/quick/{{ what }}/save">{% csrf_token %}
                <div class="card">
                    <div class="card-header">
                        <div class="card-title">{% ifequal editmode 'edit'  %}编辑{% else %}添加{% endifequal %}{{ what|capfirst }}{%ifequal editmode 'edit' %}: {{ name }}{% endifequal %}</div>
                    </div>
                    <div class="card-body">
                        <ul class="nav nav-pills nav-secondary" id="pills-tab" role="tablist">
                        {% for key,value in sections.items|sort %}
                            <li class="nav-item">
                                {% if value.name == 'General' %}
                                <a class="nav-link active" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="true">基本</a>
                                {% elif value.name == 'Management' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">管理</a>
                                {% elif value.name == 'Advanced' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">高级</a>
                                {% elif value.name == 'Networking (Global)' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">网络(全局)</a>
                                {% elif value.name == 'Virtualization' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">虚拟化</a>
                                {% elif value.name == 'Networking' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">网络</a>
                                {% elif value.name == 'Power Management' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">电源管理</a>
                                {% elif value.name == 'Resources' %}
                                <a class="nav-link" id="pills-{{ value.name }}-tab" data-toggle="pill" href="#pills-{{ value.name }}" role="tab" aria-controls="pills-{{ value.name }}" aria-selected="false">资源</a>
                                {% else %}
                                {% endif %}
                            </li>
                        {% endfor %}
                        </ul>
                        <div class="tab-content mt-2 mb-3" id="pills-tabContent">
                        {% for key,value in sections.items|sort %}
                            {% ifequal value.name "General" %}
                            <div class="tab-pane fade show active" id="pills-{{ value.name }}" role="tabpanel">
                            {% else %}
                            <div class="tab-pane fade" id="pills-{{ value.name }}" role="tabpanel">
                            {% endifequal %}
                            {% for item in value.fields %}
                                <div id="{{ item.dname }}_row" class="row">
                                {% ifequal item.html_element "widget" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        <span id="widget_{{ item.dname }}"></span>
                                    </div>
                                {% else %}
                                    {% ifequal item.html_element "text" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        {% smart_if editmode == "edit" and item.dname == "name" %}
                                            {{ item.value }} (editing, value is read-only)
                                            <input class="form-control" type="hidden" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ item.value }}" />
                                            {% else %}
                                            <input class="form-control" type="text" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ item.value }}" />
                                        {% endsmart_if %}
                                    </div>
                                    {% endifequal %}
                                    {% ifequal item.html_element "textarea" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        <textarea class="form-control" rows="5" name="{{ item.dname }}" id="{{ item.dname }}">{{ item.value }}</textarea>
                                    </div>
                                    {% endifequal %}
                                    {% ifequal item.html_element "radio" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        {% for choice in item.choices %}
                                            {% ifequal item.value choice %}
                                            <input type="radio" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ choice }}" checked="checked">{{ choice }}&nbsp;
                                            {% else %}
                                            <input type="radio" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ choice }}">{{ choice }}&nbsp;
                                            {% endifequal %}
                                        {% endfor %}
                                    </div>
                                    {% endifequal %}
                                    {% ifequal item.html_element "checkbox" %}
                                    <div class="form-check col-md-3" style="margin-top:20px;">
                                        <label class="form-check-label">{{ item.caption }}
                                    {% ifequal item.value 1 %}
                                        <input type="checkbox" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ item.dname }}" checked="checked" />
                                    {% else %}
                                        <input type="checkbox" name="{{ item.dname }}" id="{{ item.dname }}" value="{{ item.dname }}" />
                                    {% endifequal %}
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption"><i></i></label>
                                        </label>
                                    </div>
                                    {% endifequal %}
                                    {% ifequal item.html_element "select" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        <select class="form-control" id="{{ item.dname }}" name="{{ item.dname }}">
                                        {% for choice in item.choices %}
                                           {% ifequal item.value choice %}
                                           <option value="{{ choice }}" selected>{{ choice }}</A>
                                            {% else %}
                                            <option value="{{ choice }}">{{ choice }}</A>
                                            {% endifequal %}
                                        {% endfor %} 
                                        </select>
                                    </div>
                                    {% endifequal %}
                                    {% ifequal item.html_element "multiselect" %}
                                    <div class="form-group col-md-7">
                                        <label for="{{ item.dname }}" id="{{ item.dname }}_caption">{{ item.caption }}</label>
                                        <div class="row">
                                            <div class="form-group col-md-5">
                                                <label for="from_{{ item.dname }}">可用:</label>
                                                <br />
                                                <select class="form-control" multiple id="from_{{ item.dname }}" name="from_{{ item.dname }}" class="edit">
                                            {% for choice in item.choices %}
                                                {% smart_if choice not in item.value_raw %}
                                                <option value="{{ choice }}">{{ choice }}</a>
                                                {% endsmart_if %}
                                            {% endfor %} 
                                                </select>
                                            </div>
                                            <div class="form-group col-md-2">
                                                <br/><br/>
                                                <input class="btn btn-primary btn-xs" style="display:block;margin-bottom:5px;margin-left:15px;" type="button" value="&gt;&gt;" id="add_{{ item.dname }}" onclick="$('#from_{{ item.dname }} option:selected').remove().appendTo('#{{ item.dname }}');" />
                                                <input class="btn btn-primary btn-xs" style="display:block;margin-left:15px;" type="button" value="&lt;&lt;" id="remove_{{ item.dname }}" onclick="$('#{{ item.dname }} option:selected').remove().appendTo('#from_{{ item.dname }}');" />
                                            </div>
                                            <div class="form-group col-md-5">
                                                <label for="{{ item.dname }}">已选:</label>
                                                <br />
                                                <select class="form-control" multiple id="{{ item.dname }}" name="{{ item.dname }}" class="edit">
                                            {% for choice in item.choices %}
                                                {% smart_if choice in item.value_raw %}
                                                <option value="{{ choice }}">{{ choice }}</a>
                                                {% endsmart_if %}
                                            {% endfor %}
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    {% endifequal %}
                                    <div class="form-group col-md-5">
                                        <br/>
                                        {% smart_if editmode == "edit" and item.dname != "name" %}
                                        {% if item.tooltip %}
                                        <p class="form-text text-muted">{{ item.tooltip }}</p>
                                        {% endif %}
                                        {% endsmart_if %}
                                    </div>
                                {% endifequal %}
                                </div>
                            {% endfor %}
                            </div>
                        {% endfor %}
                        </div>
                        <div class="form-group">
                            {% if editable %}
                                <input class="btn btn-success" type="submit" name="submit" onClick="on_form_submit();" value="保存" />
                                <input class="btn btn-danger" type="button" onClick="window.location='/quick/{{ what }}/list';" value="取消" />
                            {% else %}
                                <input class="btn btn-success" type="submit" disabled="disabled" name="submit" onClick="on_form_submit();" value="保存" />
                                <input class="btn btn-danger" type="button" disabled="disabled" onClick="window.location='/quick/{{ what }}/list';" value="取消" />
                            {% endif %}
                                <input type="hidden" name="editmode" value="{{ editmode }}" />
                                <input type="hidden" name="subobject" value="{{ subobject }}" />
                            {% ifequal what "system" %}
                                <input type="hidden" id="interface_list" name="interface_list" value="1" />
                                <input type="hidden" id="present" name="present" value="1" />
                                <input type="hidden" id="original" name="original" value="1" />
                            {% endifequal %}
                        </div>
                    </div>
                </div>
            </form>
            </div>
        </div>
    </div>
</div>
{% endblock content %}




