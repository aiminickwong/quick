#!/usr/bin/env python
# -*- coding:utf-8 -*-
from django.db import models
from datetime import datetime
import time
class List(models.Model):
    name = models.CharField(max_length=30,primary_key=True,verbose_name='任务名称')
    ips = models.TextField(verbose_name='IPS')
    osuser = models.CharField(max_length=20,verbose_name='系统账号')
    ospwd = models.CharField(max_length=35,verbose_name='系统密码')
    osarch = models.CharField(max_length=20,verbose_name='系统平台')
    osbreed = models.CharField(max_length=20,verbose_name='系统流派')
    osrelease = models.CharField(max_length=20,verbose_name='系统版本')
    ospart = models.TextField(verbose_name='系统分区')
    ospackages = models.TextField(verbose_name='安装软件')
    osenv = models.CharField(max_length=35,verbose_name='任务场景')
    notice_mail = models.EmailField(max_length=254,verbose_name='通知邮箱')
    drive_path = models.URLField(max_length=200,verbose_name='驱动路径')
    raid = models.CharField(max_length=300,verbose_name='RAID配置')
    bios = models.CharField(max_length=300,verbose_name='BIOS配置')
    start_time = models.CharField(max_length=20,default=time.time,verbose_name='开始时间')
    usetime= models.CharField(max_length=30,verbose_name='已用时间')
    status = models.CharField(max_length=30,verbose_name='状态|进度')
    owner = models.CharField(max_length=30,verbose_name='创建者')
    flag = models.CharField(max_length=20,verbose_name='标记')
class Detail(models.Model):
    name = models.CharField(max_length=30,verbose_name='任务名称')
    ip = models.GenericIPAddressField(verbose_name='IP')
    mac = models.CharField(max_length=55,verbose_name='MAC')
    netmask = models.CharField(max_length=55,default='255.255.255.0',verbose_name='NETMASK')
    gateway = models.GenericIPAddressField(default='N/R',verbose_name='网关')
    ipmi_ip = models.CharField(max_length=50,verbose_name='IPMI IP',null=True)
    ipmi_netmask = models.CharField(max_length=50,verbose_name='IPMI_NETMASK',null=True)
    ipmi_gateway = models.CharField(max_length=50,verbose_name='IPMI_GATEWAY',null=True)
    ipmi_user = models.CharField(max_length=50,verbose_name='IPMI_USER',null=True)
    ipmi_pwd = models.CharField(max_length=50,verbose_name='IPMI_PWD',null=True)
    vendor = models.CharField(max_length=50,default='N/R',verbose_name='厂商')
    hardware_model= models.CharField(max_length=50,verbose_name='硬件型号')
    hardware_sn = models.CharField(max_length=150,verbose_name='序列号')
    apply_template= models.CharField(max_length=50,verbose_name='应用模板')
    start_time = models.CharField(max_length=20,default=time.time,verbose_name='开始时间')
    usetime= models.CharField(max_length=30,verbose_name='已用时间')
    status = models.TextField(verbose_name='状态|进度')
    owner = models.CharField(max_length=30,verbose_name='创建者')
    flag = models.CharField(max_length=20,verbose_name='标记')
    class Meta:
        unique_together=("name","ip")

class Report(models.Model):
    ip = models.CharField(max_length=55,verbose_name='IP',unique=True)
    bootmac = models.CharField(max_length=55,verbose_name='MAC',unique=True)
    vendor = models.CharField(max_length=50,default='N/R',verbose_name='厂商')
    hardware_model= models.CharField(max_length=150,verbose_name='硬件型号')
    hardware_sn = models.CharField(max_length=150,verbose_name='序列号')
    nic = models.TextField(verbose_name="网卡信息")
    nic_model = models.TextField(verbose_name="网卡硬件信息")
    cpu = models.TextField(verbose_name='CPU')
    memory = models.TextField(verbose_name='内存')
    disk = models.TextField(verbose_name='硬盘')
    raid = models.TextField(verbose_name='RAID卡')
    ipmi = models.TextField(verbose_name='IPMI信息')
    device_type = models.TextField(verbose_name='设备类型')
    owner = models.CharField(max_length=30,verbose_name='管理者')
    create_time = models.CharField(max_length=30,verbose_name='添加时间')
    updtae_time = models.CharField(max_length=30,verbose_name='最近更新时间')
    flag = models.CharField(max_length=20,verbose_name='标记',null=True)

class Users(models.Model):
    employee_id = models.CharField(max_length=30,verbose_name='员工编号',unique=True)
    username = models.CharField(max_length=30,verbose_name='用户名',unique=True)
    password = models.CharField(max_length=50,verbose_name='密码')
    email = models.CharField(max_length=30,null=True,verbose_name='邮箱',unique=True)
    telephone = models.CharField(max_length=30,null=True,verbose_name='手机号')
    name = models.CharField(max_length=50,verbose_name='姓名')
    sex  = models.CharField(max_length=5,verbose_name='性别',null=True)
    photo = models.BinaryField(verbose_name='用户头像',null=True)
    online = models.CharField(max_length=5,verbose_name="在线状态",default="no")
    token = models.CharField(max_length=50,verbose_name='注册令牌')
    token_expire_time = models.CharField(max_length=50,verbose_name='注册令牌过期时间')
    reset_token = models.CharField(max_length=50,verbose_name='重置密码令牌')
    reset_token_expire_time = models.CharField(max_length=50,default='2999-10-10 10:10:01',verbose_name='重置密码令牌过期时间')
    is_superuser = models.CharField(max_length=5,verbose_name='管理员',default="no")
    is_active = models.CharField(max_length=5,verbose_name='账号状态',default="no")
    registry_time = models.DateTimeField(default=datetime.now,verbose_name='注册时间')
class Groups(models.Model):
    name = models.CharField(max_length=30,verbose_name='角色名称')
    desc = models.CharField(max_length=150,null=True,verbose_name='描述信息')
    flag = models.CharField(max_length=2,default='1',verbose_name='预置角色标记')
class Rights(models.Model):
    name = models.CharField(max_length=50,verbose_name='权限名称',unique=True)
    menu1_title = models.CharField(max_length=50,verbose_name='一级菜单名称')
    menu1_icon = models.CharField(max_length=50,verbose_name='一级菜单图标')
    menu2_title = models.CharField(max_length=50,verbose_name='二级菜单名称',unique=True)
    menu2_url = models.CharField(max_length=150,verbose_name='二级菜单url',unique=True)
    desc = models.CharField(max_length=150,verbose_name='描述信息',null=True)
    flag = models.CharField(max_length=2,default='1',verbose_name='预置权限标记')
class User_Group(models.Model):
    user = models.ForeignKey("Users",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='用户ID')
    group = models.ForeignKey("Groups",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='角色ID')
    class Meta:
        unique_together=("user","group")

class Group_Right(models.Model):
    group = models.ForeignKey("Groups",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='角色ID')
    right = models.ForeignKey("Rights",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='权限ID')
    class Meta:
        unique_together=("group","right")
class User_Right(models.Model):
    user = models.ForeignKey("Users",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='用户ID')
    right = models.ForeignKey("Rights",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='权限ID')
    class Meta:
        unique_together=("user","right")

class App_Port_View(models.Model):
    #服务器和交换机逻辑视图表
    app_ip  = models.CharField(max_length=30,verbose_name='业务IP')
    app_mac = models.CharField(max_length=55,verbose_name='MAC')
    # 无管理IP交换机如2K，用主交换机管理IP加序号：192.168.108.100:1
    sw_ip  = models.CharField(max_length=30,verbose_name='交换机管理IP',)
    sw_name = models.CharField(max_length=30,verbose_name='交换机名称',)
    sw_port = models.CharField(max_length=30,verbose_name='交换机端口')
    remark = models.CharField(max_length=100,verbose_name='备注',null=True)
class Hardware_Port_View(models.Model):
    #服务器和交换机物理视图表
    hs_sn              = models.CharField(max_length=80,verbose_name='服务器SN')
    hs_sn_engine_room  = models.CharField(max_length=30,verbose_name='服务器机房')
    hs_sn_rack         = models.CharField(max_length=30,verbose_name='服务器机柜')
    hs_sn_u            = models.CharField(max_length=30,verbose_name='服务器U位')
    hs_eth             = models.CharField(max_length=33,verbose_name='服务器网口')
    sw_sn              = models.CharField(max_length=80,verbose_name='交换机SN')
    sw_engine_room     = models.CharField(max_length=30,verbose_name='交换机机房')
    sw_sn_rack         = models.CharField(max_length=30,verbose_name='交换机机柜')
    sw_sn_u            = models.CharField(max_length=30,verbose_name='交换机U位')
    sw_port            = models.CharField(max_length=50,verbose_name='交换机端口')
    location           = models.CharField(max_length=100,verbose_name='地域')
    remark             = models.CharField(max_length=100,verbose_name='备注',null=True)
class App(models.Model):
    uuid = models.CharField(primary_key=True,max_length=40,verbose_name='UUID')
    ip   = models.CharField(max_length=100,verbose_name='业务IP',unique=True)
    osrelease = models.CharField(max_length=100,verbose_name='操作系统',default='N/R')
    ipmi_ip = models.CharField(max_length=100,verbose_name='IPMI地址',null=True)
    monitor = models.CharField(max_length=100,verbose_name='监控系统',default='N/R')
    app_level_1 = models.CharField(max_length=200,verbose_name='一级业务系统',default='N/R')
    app_level_2 = models.CharField(max_length=200,verbose_name='二级业务系统',default='N/R')
    app_level_3 = models.CharField(max_length=200,verbose_name='三级业务系统',default='N/R')
    device_type  = models.CharField(max_length=100,verbose_name='设备类型',default='N/R')
    kernel_version = models.CharField(max_length=100,verbose_name='内核版本',default='N/R')
    app_module = models.CharField(max_length=100,verbose_name='业务模块',default='N/R')
    device_user = models.CharField(max_length=100,verbose_name='使用人',default='N/R')
    order_ops_user = models.CharField(max_length=100,verbose_name='结算运维接口人',default='N/R')
    order_dept = models.CharField(max_length=100,verbose_name='结算部门',default='N/R')
    ops_user = models.CharField(max_length=100,verbose_name='运维接口人',default='N/R')
    ops_team = models.CharField(max_length=100,verbose_name='运维团队',default='N/R')
    dev_user = models.CharField(max_length=100,verbose_name='开发接口人',default='N/R')
    dev_team = models.CharField(max_length=100,verbose_name='开发团队',default='N/R')
    app_user = models.CharField(max_length=100,verbose_name='业务接口人',default='N/R')
    app_dept = models.CharField(max_length=100,verbose_name='业务部门',default='N/R')
    is_cdn = models.CharField(max_length=10,verbose_name='是否为CDN设备',default='N/R')
    environment = models.CharField(max_length=10,verbose_name='环境',default='N/R')
    life_cycle_status = models.CharField(max_length=10,verbose_name='生命周期状态',default='N/R')
    cluster = models.CharField(max_length=30,verbose_name='集群',default='N/R')
    host_name = models.CharField(max_length=200,verbose_name='主机简称',default='N/R')
    ipv6 = models.CharField(max_length=20,verbose_name='IPV6信息',default='N/R')
    ip_from = models.CharField(max_length=30,verbose_name='业务IP来源',default='N/R')
    cloud_from = models.CharField(max_length=30,verbose_name='云管来源IP',default='N/R')
    access_zone = models.CharField(max_length=30,verbose_name='访问区',default='N/R')
    is_bond = models.CharField(max_length=100,verbose_name='网卡是否已绑定',default='N/R')
    is_enforce = models.CharField(max_length=100,verbose_name='是否安全加固',default='N/R')
    is_off_firewall = models.CharField(max_length=100,verbose_name='防火墙是否已关闭',default='N/R')
    is_upgrade_ssh = models.CharField(max_length=100,verbose_name='ssh是否已升级',default='N/R')
    server_ip1 = models.CharField(max_length=100,verbose_name='服务IP1地址',default='N/R')
    server_ip2 = models.CharField(max_length=100,verbose_name='服务IP2地址',default='N/R')
    server_instance = models.CharField(max_length=100,verbose_name='服务实例名',default='N/R')
    node_type = models.CharField(max_length=100,verbose_name='节点类型',default='N/R')
    hardware_uuid = models.CharField(max_length=40,verbose_name='硬件UUID')
    remark     = models.CharField(max_length=100,verbose_name='备注',default='N/R')
class Hardware(models.Model):
    uuid = models.CharField(primary_key=True,max_length=40,verbose_name='UUID')
    ipmi_ip = models.CharField(max_length=100,verbose_name='IPMI地址',null=True)
    sn = models.CharField(max_length=100,verbose_name='序列号',unique=True)
    vendor = models.CharField(max_length=100,verbose_name='设备生产商',default='N/R')
    model = models.CharField(max_length=100,verbose_name='设备型号',default='N/R')
    location = models.CharField(max_length=100,verbose_name='地域',default='N/R')
    engine_room= models.CharField(max_length=100,verbose_name='所属机房名称',default='N/R')
    engine_room_id= models.CharField(max_length=100,verbose_name='机房编号',default='N/R')
    rack= models.CharField(max_length=100,verbose_name='机柜编号',default='N/R')
    u_site = models.CharField(max_length=100,verbose_name='U位',default='N/R')
    order_maintenance = models.CharField(max_length=100,verbose_name='是否采购维保',default='N/R')
    maintenance_start_time = models.CharField(max_length=50,verbose_name='维保开始时间',default='N/R')
    maintenance_end_time = models.CharField(max_length=50,verbose_name='维保结束时间',default='N/R')
    maintenance_vendor = models.CharField(max_length=100,verbose_name='维保厂家',default='N/R')
    cpu_model = models.CharField(max_length=100,verbose_name='CPU型号',default='N/R')
    cpu_core = models.CharField(max_length=100,verbose_name='CPUcore（总）',default='N/R')
    cpu_fre = models.CharField(max_length=100,verbose_name='CPU主频(单位GHZ)',default='N/R')
    memory = models.CharField(max_length=100,verbose_name='内存容量(单位G)',default='N/R')
    net_card = models.CharField(max_length=100,verbose_name='硬件配置',default='N/R')
    disk    = models.CharField(max_length=100,verbose_name='内置硬盘容量(单位G)',default='N/R')
    project_name= models.CharField(max_length=100,verbose_name='所属项目',default='N/R')
    project_name_abbr= models.CharField(max_length=100,verbose_name='项目简称',default='N/R')
    project_id= models.CharField(max_length=100,verbose_name='项目编号',default='N/R')
    uplink= models.CharField(max_length=100,verbose_name='上联架顶',default='N/R')
    device_func = models.CharField(max_length=100,verbose_name='设备功能',default='N/R')
    mirror_disk_status = models.CharField(max_length=100,verbose_name='MirrorDisk状态',default='N/R')
    fw_version = models.CharField(max_length=100,verbose_name='FW版本',default='N/R')
    power_num= models.CharField(max_length=100,verbose_name='电源个数',default='N/R')
    ventilator_num = models.CharField(max_length=100,verbose_name='风扇个数',default='N/R')
    is_virt = models.CharField(max_length=100,verbose_name='是否已虚拟化',default='N/R')
    is_resource_pool = models.CharField(max_length=100,verbose_name='是否资源池化',default='N/R')
    install_date = models.CharField(max_length=100,verbose_name='上架日期',default='N/R')
    contract = models.CharField(max_length=100,verbose_name='[属于]合同',default='N/R')
    asset_id = models.CharField(null=True,max_length=30,verbose_name='资产编号',default='N/R')
    remark     = models.CharField(max_length=100,verbose_name='备注',default='N/R')

class Script(models.Model):
    name        = models.CharField(max_length=30,verbose_name='名称')
    content     = models.TextField(verbose_name='内容')
    lang        = models.CharField(max_length=100,verbose_name='脚本语言')
    desc        = models.CharField(max_length=150,verbose_name='描述',null=True)
    create_time = models.CharField(max_length=50,verbose_name='创建时间',default=datetime.now)
    owner       = models.CharField(max_length=50,verbose_name='创建者')
class Host_Group(models.Model):
    name        = models.CharField(max_length=30,verbose_name='名称')
    content     = models.TextField(verbose_name='内容')
    desc        = models.CharField(max_length=150,verbose_name='描述',null=True)
    create_time = models.CharField(max_length=50,verbose_name='创建时间',default=datetime.now)
    owner       = models.CharField(max_length=50,verbose_name='创建者')
class Batch(models.Model):
    name        = models.CharField(max_length=30,verbose_name='名称')
    ip_name     = models.CharField(max_length=50,verbose_name='IP名称')
    script_name = models.TextField(verbose_name='脚本名称')
    osuser      = models.CharField(max_length=20,verbose_name='系统账号')
    ospwd       = models.CharField(max_length=50,verbose_name='系统密码')
    is_script   = models.CharField(max_length=4,verbose_name='是否脚本')
    is_ip       = models.CharField(max_length=4,verbose_name='是否IP')
    owner       = models.CharField(max_length=50,verbose_name='创建者')
    create_time = models.CharField(max_length=50,verbose_name='创建时间',default=datetime.now)
class Batch_Temp(models.Model):
    name        = models.CharField(max_length=30,verbose_name='名称')
    ip          = models.GenericIPAddressField(verbose_name='IP')
    status      = models.CharField(max_length=50,verbose_name='状态')
    result      = models.TextField(verbose_name='返回结果')
    owner       = models.CharField(max_length=50,verbose_name='执行人')
    create_time = models.CharField(max_length=50,verbose_name='执行时间',default=datetime.now)
    class Meta:
        unique_together=("name","ip")
class Esxi_conn(models.Model):
    ip       = models.GenericIPAddressField(verbose_name='IP',primary_key=True)
    username = models.CharField(max_length=100,verbose_name='用户名')
    password = models.CharField(max_length=100,verbose_name='密码')
class Esxi_host(models.Model):
    ip          = models.CharField(max_length=30,verbose_name='IP',primary_key=True)
    # 2C8核 64G
    spec        = models.CharField(max_length=100,default="获取中",verbose_name='规格')
    cpuutil     = models.CharField(max_length=100,default="获取中",verbose_name='CPU利用率')
    memoryutil  = models.CharField(max_length=100,default="获取中",verbose_name='内存利用率')
    storage     = models.TextField(default="获取中",verbose_name='存储')
    cputhreads  = models.CharField(max_length=100,default="获取中",verbose_name='CPU线程数')
    cpumhz      = models.CharField(max_length=100,default="获取中",verbose_name='CPU主频')
    cpumodel    = models.CharField(max_length=100,default="获取中",verbose_name='CPU型号')
    os          = models.CharField(max_length=100,default="获取中",verbose_name='系统')
    vendor      = models.CharField(max_length=100,default="获取中",verbose_name='厂商')
    model       = models.CharField(max_length=100,default="获取中",verbose_name='硬件型号')
    sn          = models.TextField(default="获取中",verbose_name='序列号')
class Vm_host(models.Model):
    name        = models.CharField(max_length=100,verbose_name='名称',primary_key=True)
    ip          = models.CharField(max_length=30,verbose_name='IP')
    spec        = models.CharField(max_length=100,verbose_name='规格')
    disk        = models.CharField(max_length=100,verbose_name='硬盘')
    os          = models.CharField(max_length=100,verbose_name='系统')
    powerstatus = models.CharField(max_length=100,verbose_name='电源状态')
    esxi_ip     = models.GenericIPAddressField(verbose_name='宿主机IP')

class Ip_Pool(models.Model):
    # 192.168.1.X
    name        = models.CharField(max_length=50,verbose_name='名称')
    used        = models.CharField(max_length=20,verbose_name='已分配')
    unuse       = models.CharField(max_length=100,verbose_name='可用')
    retain      = models.CharField(max_length=100,verbose_name='保留')
    #区域可选：核心区、汇聚区、接入区
    area        = models.CharField(max_length=100,verbose_name='区域')
    create_time = models.CharField(max_length=50,verbose_name='创建时间',default=datetime.now)
    owner       = models.CharField(max_length=100,verbose_name='创建者')
    desc        = models.CharField(max_length=100,verbose_name='描述',null=True)
class Ip_Pool_detail(models.Model):
    ip          = models.GenericIPAddressField(primary_key=True,verbose_name='IP')
    ippool      = models.ForeignKey("Ip_Pool",to_field="id",on_delete=models.SET('关联IP池已删除') ,verbose_name='地址池ID')
    application = models.CharField(max_length=100,verbose_name='用途',null=True)
    user        = models.CharField(max_length=30,verbose_name='申请人',null=True)
    job_id      = models.CharField(max_length=50,verbose_name='工单号',null=True)
    owner       = models.CharField(max_length=30,verbose_name='分配操作人')
    create_time = models.CharField(max_length=50,verbose_name='分配日期',default=datetime.now)
    remark      = models.CharField(max_length=100,verbose_name='备注',null=True)
class Login_Log(models.Model):
    time   = models.CharField(max_length=50,verbose_name='登录时间',default=datetime.now)
    action = models.CharField(max_length=30,verbose_name='动作')
    status = models.CharField(max_length=30,verbose_name='状态')
    user   = models.CharField(max_length=100,verbose_name='用户')
    ip     = models.GenericIPAddressField(verbose_name='登陆IP')
    remark = models.CharField(max_length=100,verbose_name='详情',null=True)
class Manual_Log(models.Model):
    time    = models.CharField(max_length=50,verbose_name='时间',default=datetime.now)
    user    = models.CharField(max_length=100,verbose_name='用户')
    action  = models.CharField(max_length=100,verbose_name='操作')
    remark  = models.CharField(max_length=100,verbose_name='详情',null=True)
class Asset_Log(models.Model):
    time          = models.CharField(max_length=50,verbose_name='时间',default=datetime.now)
    name          = models.CharField(max_length=50,verbose_name='视图')
    #键名统一为UUID
    key           = models.CharField(max_length=100,verbose_name='UUID')
    before_update = models.TextField(verbose_name='变更前')
    after_update  = models.TextField(verbose_name='变更后')
    action        = models.CharField(max_length=100,verbose_name='动作')
    user          = models.CharField(max_length=100,verbose_name='用户')
    job_id        = models.CharField(max_length=50,verbose_name='工单号',null=True)
    remark        = models.CharField(max_length=100,verbose_name='详情',null=True)
    reset         = models.CharField(max_length=2,verbose_name='恢复标记',default='0')

class System(models.Model):
    app_records        = models.IntegerField(verbose_name='quick_app表总条目数',default=0)
    hardware_records   = models.IntegerField(verbose_name='quick_hardware表总条目数',default=0)
    yw_records         = models.IntegerField(verbose_name='quick_app_hardware关联表总条目数',default=0)
    user_records       = models.IntegerField(verbose_name='quick_users表总条目数',default=0)
    asset_log_records  = models.IntegerField(verbose_name='quick_asset_log表总条目数',default=0)
    manual_log_records = models.IntegerField(verbose_name='quick_manual_log表总条目数',default=0)
    login_log_records  = models.IntegerField(verbose_name='quick_login_log表总条目数',default=0)
    esxi_host_records  = models.IntegerField(verbose_name='quick_esxi_host表总条目数',default=0)
    vm_host_records    = models.IntegerField(verbose_name='quick_vm_host表总条目数',default=0)
class User_Profile(models.Model):
    user                           = models.ForeignKey("Users",to_field="id",default=1,on_delete=models.CASCADE,verbose_name='用户ID')
    username                       = models.CharField(max_length=30,verbose_name='用户名',unique=True)
    background                     = models.CharField(max_length=8,verbose_name='平台背景',default='bg1')
    topbar                         = models.CharField(max_length=20,verbose_name='顶部导航样式',default='light-blue')
    app_uuid                       = models.CharField(max_length=4,default='off')
    hardware_uuid                  = models.CharField(max_length=4,default='off')
    app_hardware_uuid              = models.CharField(max_length=4,default='on')
    app_ipmi_ip                    = models.CharField(max_length=4,default='on')
    hardware_ipmi_ip               = models.CharField(max_length=4,default='on')
    app_remark                     = models.CharField(max_length=4,default='on')
    hardware_remark                = models.CharField(max_length=4,default='on')
    yw_view_ip                     = models.CharField(max_length=4,default='on')
    yw_view_ipmi_ip                = models.CharField(max_length=4,default='on')
    yw_view_osrelease              = models.CharField(max_length=4,default='on')
    yw_view_monitor                = models.CharField(max_length=4,default='on')
    yw_view_kernel_version         = models.CharField(max_length=4,default='on')
    yw_view_app_level_1            = models.CharField(max_length=4,default='on')
    yw_view_app_level_2            = models.CharField(max_length=4,default='on')
    yw_view_app_level_3            = models.CharField(max_length=4,default='on')
    yw_view_device_type            = models.CharField(max_length=4,default='on')
    yw_view_app_module             = models.CharField(max_length=4,default='on')
    yw_view_device_user            = models.CharField(max_length=4,default='on')
    yw_view_order_ops_user         = models.CharField(max_length=4,default='on')
    yw_view_order_dept             = models.CharField(max_length=4,default='on')
    yw_view_ops_user               = models.CharField(max_length=4,default='on')
    yw_view_ops_team               = models.CharField(max_length=4,default='on')
    yw_view_dev_user               = models.CharField(max_length=4,default='on')
    yw_view_dev_team               = models.CharField(max_length=4,default='on')
    yw_view_app_user               = models.CharField(max_length=4,default='on')
    yw_view_app_dept               = models.CharField(max_length=4,default='on')
    yw_view_is_cdn                 = models.CharField(max_length=4,default='on')
    yw_view_environment            = models.CharField(max_length=4,default='on')
    yw_view_life_cycle_status      = models.CharField(max_length=4,default='on')
    yw_view_cluster                = models.CharField(max_length=4,default='on')
    yw_view_host_name              = models.CharField(max_length=4,default='on')
    yw_view_ipv6                   = models.CharField(max_length=4,default='on')
    yw_view_ip_from                = models.CharField(max_length=4,default='on')
    yw_view_cloud_from             = models.CharField(max_length=4,default='on')
    yw_view_access_zone            = models.CharField(max_length=4,default='on')
    yw_view_is_bond                = models.CharField(max_length=4,default='on')
    yw_view_is_enforce             = models.CharField(max_length=4,default='on')
    yw_view_is_off_firewall        = models.CharField(max_length=4,default='on')
    yw_view_is_upgrade_ssh         = models.CharField(max_length=4,default='on')
    yw_view_server_ip1             = models.CharField(max_length=4,default='on')
    yw_view_server_ip2             = models.CharField(max_length=4,default='on')
    yw_view_server_instance        = models.CharField(max_length=4,default='on')
    yw_view_node_type              = models.CharField(max_length=4,default='on')
    yw_view_asset_id               = models.CharField(max_length=4,default='on')
    yw_view_sn                     = models.CharField(max_length=4,default='on')
    yw_view_model                  = models.CharField(max_length=4,default='on')
    yw_view_vendor                 = models.CharField(max_length=4,default='on')
    yw_view_cpu_model              = models.CharField(max_length=4,default='on')
    yw_view_cpu_core               = models.CharField(max_length=4,default='on')
    yw_view_cpu_fre                = models.CharField(max_length=4,default='on')
    yw_view_memory                 = models.CharField(max_length=4,default='on')
    yw_view_net_card               = models.CharField(max_length=4,default='on')
    yw_view_disk                   = models.CharField(max_length=4,default='on')
    yw_view_location               = models.CharField(max_length=4,default='on')
    yw_view_engine_room            = models.CharField(max_length=4,default='on')
    yw_view_engine_room_id         = models.CharField(max_length=4,default='on')
    yw_view_rack                   = models.CharField(max_length=4,default='on')
    yw_view_u_site                 = models.CharField(max_length=4,default='on')
    yw_view_order_maintenance      = models.CharField(max_length=4,default='on')
    yw_view_maintenance_start_time = models.CharField(max_length=4,default='on')
    yw_view_maintenance_end_time   = models.CharField(max_length=4,default='on')
    yw_view_maintenance_vendor     = models.CharField(max_length=4,default='on')
    yw_view_project_name           = models.CharField(max_length=4,default='on')
    yw_view_project_name_abbr      = models.CharField(max_length=4,default='on')
    yw_view_project_id             = models.CharField(max_length=4,default='on')
    yw_view_uplink                 = models.CharField(max_length=4,default='on')
    yw_view_device_func            = models.CharField(max_length=4,default='on')
    yw_view_mirror_disk_status     = models.CharField(max_length=4,default='on')
    yw_view_fw_version             = models.CharField(max_length=4,default='on')
    yw_view_power_num              = models.CharField(max_length=4,default='on')
    yw_view_ventilator_num         = models.CharField(max_length=4,default='on')
    yw_view_is_virt                = models.CharField(max_length=4,default='on')
    yw_view_is_resource_pool       = models.CharField(max_length=4,default='on')
    yw_view_install_date           = models.CharField(max_length=4,default='on')
    yw_view_contract               = models.CharField(max_length=4,default='on')
    ip                            = models.CharField(max_length=4,default='on')
    osrelease                     = models.CharField(max_length=4,default='on')
    monitor                       = models.CharField(max_length=4,default='on')
    app_level_1                   = models.CharField(max_length=4,default='on')
    app_level_2                   = models.CharField(max_length=4,default='on')
    app_level_3                   = models.CharField(max_length=4,default='on')
    device_type                   = models.CharField(max_length=4,default='on')
    kernel_version                = models.CharField(max_length=4,default='on')
    app_module                    = models.CharField(max_length=4,default='on')
    device_user                   = models.CharField(max_length=4,default='on')
    order_ops_user                = models.CharField(max_length=4,default='on')
    order_dept                    = models.CharField(max_length=4,default='on')
    ops_user                      = models.CharField(max_length=4,default='on')
    ops_team                      = models.CharField(max_length=4,default='on')
    dev_user                      = models.CharField(max_length=4,default='on')
    dev_team                      = models.CharField(max_length=4,default='on')
    app_user                      = models.CharField(max_length=4,default='on')
    app_dept                      = models.CharField(max_length=4,default='on')
    is_cdn                        = models.CharField(max_length=4,default='on')
    environment                   = models.CharField(max_length=4,default='on')
    life_cycle_status             = models.CharField(max_length=4,default='on')
    cluster                       = models.CharField(max_length=4,default='on')
    host_name                     = models.CharField(max_length=4,default='on')
    ipv6                          = models.CharField(max_length=4,default='on')
    ip_from                       = models.CharField(max_length=4,default='on')
    cloud_from                    = models.CharField(max_length=4,default='on')
    access_zone                   = models.CharField(max_length=4,default='on')
    is_bond                       = models.CharField(max_length=4,default='on')
    is_enforce                    = models.CharField(max_length=4,default='on')
    is_off_firewall               = models.CharField(max_length=4,default='on')
    is_upgrade_ssh                = models.CharField(max_length=4,default='on')
    server_ip1                    = models.CharField(max_length=4,default='on')
    server_ip2                    = models.CharField(max_length=4,default='on')
    server_instance               = models.CharField(max_length=4,default='on')
    node_type                     = models.CharField(max_length=4,default='on')
    asset_id                      = models.CharField(max_length=4,default='on')
    sn                            = models.CharField(max_length=4,default='on')
    model                         = models.CharField(max_length=4,default='on')
    vendor                        = models.CharField(max_length=4,default='on')
    cpu_model                     = models.CharField(max_length=4,default='on')
    cpu_core                      = models.CharField(max_length=4,default='on')
    cpu_fre                       = models.CharField(max_length=4,default='on')
    memory                        = models.CharField(max_length=4,default='on')
    net_card                      = models.CharField(max_length=4,default='on')
    disk                          = models.CharField(max_length=4,default='on')
    location                      = models.CharField(max_length=4,default='on')
    engine_room                   = models.CharField(max_length=4,default='on')
    engine_room_id                = models.CharField(max_length=4,default='on')
    rack                          = models.CharField(max_length=4,default='on')
    u_site                        = models.CharField(max_length=4,default='on')
    order_maintenance             = models.CharField(max_length=4,default='on')
    maintenance_start_time        = models.CharField(max_length=4,default='on')
    maintenance_end_time          = models.CharField(max_length=4,default='on')
    maintenance_vendor            = models.CharField(max_length=4,default='on')
    project_name                  = models.CharField(max_length=4,default='on')
    project_name_abbr             = models.CharField(max_length=4,default='on')
    project_id                    = models.CharField(max_length=4,default='on')
    uplink                        = models.CharField(max_length=4,default='on')
    device_func                   = models.CharField(max_length=4,default='on')
    mirror_disk_status            = models.CharField(max_length=4,default='on')
    fw_version                    = models.CharField(max_length=4,default='on')
    power_num                     = models.CharField(max_length=4,default='on')
    ventilator_num                = models.CharField(max_length=4,default='on')
    is_virt                       = models.CharField(max_length=4,default='on')
    is_resource_pool              = models.CharField(max_length=4,default='on')
    install_date                  = models.CharField(max_length=4,default='on')
    contract                      = models.CharField(max_length=4,default='on')
    install_name                  = models.CharField(max_length=4,default='on')
    install_ip                    = models.CharField(max_length=4,default='on')
    install_mac                   = models.CharField(max_length=4,default='on')
    install_netmask               = models.CharField(max_length=4,default='on')
    install_gateway               = models.CharField(max_length=4,default='on')
    install_ipmi_ip               = models.CharField(max_length=4,default='on')
    install_vendor                = models.CharField(max_length=4,default='on')
    install_hardware_model        = models.CharField(max_length=4,default='on')
    install_hardware_sn           = models.CharField(max_length=4,default='on')
    install_apply_template        = models.CharField(max_length=4,default='on')
    install_start_time            = models.CharField(max_length=4,default='on')
    install_usetime               = models.CharField(max_length=4,default='on')
    install_status                = models.CharField(max_length=4,default='on')
    install_owner                 = models.CharField(max_length=4,default='on')
    esxi_host_ip                  = models.CharField(max_length=4,default='on')
    esxi_host_spec                = models.CharField(max_length=4,default='on')
    esxi_host_cputhreads          = models.CharField(max_length=4,default='on')
    esxi_host_cpumhz              = models.CharField(max_length=4,default='on')
    esxi_host_cpumodel            = models.CharField(max_length=4,default='on')
    esxi_host_cpuutil             = models.CharField(max_length=4,default='on')
    esxi_host_memoryutil          = models.CharField(max_length=4,default='on')
    esxi_host_storage             = models.CharField(max_length=4,default='on')
    esxi_host_os                  = models.CharField(max_length=4,default='on')
    esxi_host_vendor              = models.CharField(max_length=4,default='on')
    esxi_host_model               = models.CharField(max_length=4,default='on')
    esxi_host_sn                  = models.CharField(max_length=4,default='on')
    vm_host_name                  = models.CharField(max_length=4,default='on')
    vm_host_spec                  = models.CharField(max_length=4,default='on')
    vm_host_disk                  = models.CharField(max_length=4,default='on')
    vm_host_os                    = models.CharField(max_length=4,default='on')
    vm_host_ip                 = models.CharField(max_length=4,default='on')
    vm_host_powerstatus           = models.CharField(max_length=4,default='on')
    vm_host_esxi_ip               = models.CharField(max_length=4,default='on')









